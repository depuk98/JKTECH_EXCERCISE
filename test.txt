============================= test session starts ==============================
platform darwin -- Python 3.13.1, pytest-8.3.4, pluggy-1.5.0
rootdir: /Users/deepaksingh/Desktop/JKT_EX
configfile: pytest.ini
testpaths: tests
plugins: cov-6.0.0, langsmith-0.3.11, asyncio-0.25.3, anyio-4.8.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=function
collected 182 items

tests/test_api/test_auth.py FFFFFF..                                     [  4%]
tests/test_api/test_auth_security.py FEFE                                [  6%]
tests/test_api/test_deps.py ................                             [ 15%]
tests/test_api/test_documents.py EEEEEEEEEEEEEEEEEEE                     [ 25%]
tests/test_api/test_qa_api.py EEEE.EEEEEEEEEEEE                          [ 35%]
tests/test_api/test_users.py EE.E.EEEEEEEEEEEEEEE                        [ 46%]
tests/test_db/test_model_registry.py ...                                 [ 47%]
tests/test_integration/test_rag_workflow.py ..                           [ 48%]
tests/test_integration/test_rag_workflow_comprehensive.py .....          [ 51%]
tests/test_performance/test_concurrency.py E.F                           [ 53%]
tests/test_performance.py FFEE..                                         [ 56%]
tests/test_services/test_batch_embeddings.py ...                         [ 58%]
tests/test_services/test_document_deletion.py .....                      [ 60%]
tests/test_services/test_document_processing.py .......                  [ 64%]
tests/test_services/test_document_processing_edge_cases.py ...........   [ 70%]
tests/test_services/test_document_service.py FFFs....                    [ 75%]
tests/test_services/test_pgvector_search.py .FFFF                        [ 78%]
tests/test_services/test_rag_service.py F...........                     [ 84%]
tests/test_services/test_rag_service_advanced.py .................       [ 93%]
tests/test_services/test_user_service.py ...........                     [100%]

==================================== ERRORS ====================================
___________________ ERROR at setup of test_token_expiration ____________________

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>

    async def _start_transaction(self):
        if self.isolation_level == "autocommit":
            return
    
        try:
            self._transaction = self._connection.transaction(
                isolation=self.isolation_level,
                readonly=self.readonly,
                deferrable=self.deferrable,
            )
>           await self._transaction.start()

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:843: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/asyncpg/transaction.py:146: in start
    await self._connection.execute(query)
venv/lib/python3.13/site-packages/asyncpg/connection.py:349: in execute
    result = await self._protocol.query(query, timeout)
asyncpg/protocol/protocol.pyx:360: in query
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   asyncpg.exceptions._base.InterfaceError: cannot perform operation: another operation is in progress

asyncpg/protocol/protocol.pyx:745: InterfaceError

The above exception was the direct cause of the following exception:

self = <sqlalchemy.engine.base.Connection object at 0x15bf916d0>
dialect = <sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg object at 0x1084eda90>
context = <sqlalchemy.dialects.postgresql.asyncpg.PGExecutionContext_asyncpg object at 0x15bfe0950>
statement = <sqlalchemy.dialects.postgresql.asyncpg.PGCompiler_asyncpg object at 0x15be9b0e0>
parameters = [('testuser',)]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.InterfaceError: <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError

The above exception was the direct cause of the following exception:

client = <starlette.testclient.TestClient object at 0x15bfc18c0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
app/services/user.py:44: in get_by_username_async
    result = await db.execute(select(User).filter(User.username == username))
venv/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
venv/lib/python3.13/site-packages/sqlalchemy/orm/context.py:305: in orm_execute_statement
    result = conn.execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1416: in execute
    return meth(
venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:516: in _execute_on_connection
    return connection._execute_clauseelement(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1638: in _execute_clauseelement
    ret = self._execute_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1843: in _execute_context
    return self._exec_single_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1983: in _exec_single_context
    self._handle_dbapi_exception(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2352: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: in _exec_single_context
    self.dialect.do_execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.exc.InterfaceError: (sqlalchemy.dialects.postgresql.asyncpg.InterfaceError) <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress
E                   [SQL: SELECT users.id, users.email, users.username, users.hashed_password, users.is_active, users.is_superuser, users.created_at, users.updated_at, users.age 
E                   FROM users 
E                   WHERE users.username = $1::VARCHAR]
E                   [parameters: ('testuser',)]
E                   (Background on this error at: https://sqlalche.me/e/20/rvf5)

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError
____________________ ERROR at setup of test_csrf_protection ____________________

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>

    async def _start_transaction(self):
        if self.isolation_level == "autocommit":
            return
    
        try:
            self._transaction = self._connection.transaction(
                isolation=self.isolation_level,
                readonly=self.readonly,
                deferrable=self.deferrable,
            )
>           await self._transaction.start()

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:843: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/asyncpg/transaction.py:146: in start
    await self._connection.execute(query)
venv/lib/python3.13/site-packages/asyncpg/connection.py:349: in execute
    result = await self._protocol.query(query, timeout)
asyncpg/protocol/protocol.pyx:360: in query
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   asyncpg.exceptions._base.InterfaceError: cannot perform operation: another operation is in progress

asyncpg/protocol/protocol.pyx:745: InterfaceError

The above exception was the direct cause of the following exception:

self = <sqlalchemy.engine.base.Connection object at 0x15bf90ad0>
dialect = <sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg object at 0x1084eda90>
context = <sqlalchemy.dialects.postgresql.asyncpg.PGExecutionContext_asyncpg object at 0x15c4bf130>
statement = <sqlalchemy.dialects.postgresql.asyncpg.PGCompiler_asyncpg object at 0x15be9b0e0>
parameters = [('testuser',)]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.InterfaceError: <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError

The above exception was the direct cause of the following exception:

client = <starlette.testclient.TestClient object at 0x15c4bff00>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
app/services/user.py:44: in get_by_username_async
    result = await db.execute(select(User).filter(User.username == username))
venv/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
venv/lib/python3.13/site-packages/sqlalchemy/orm/context.py:305: in orm_execute_statement
    result = conn.execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1416: in execute
    return meth(
venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:516: in _execute_on_connection
    return connection._execute_clauseelement(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1638: in _execute_clauseelement
    ret = self._execute_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1843: in _execute_context
    return self._exec_single_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1983: in _exec_single_context
    self._handle_dbapi_exception(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2352: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: in _exec_single_context
    self.dialect.do_execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.exc.InterfaceError: (sqlalchemy.dialects.postgresql.asyncpg.InterfaceError) <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress
E                   [SQL: SELECT users.id, users.email, users.username, users.hashed_password, users.is_active, users.is_superuser, users.created_at, users.updated_at, users.age 
E                   FROM users 
E                   WHERE users.username = $1::VARCHAR]
E                   [parameters: ('testuser',)]
E                   (Background on this error at: https://sqlalche.me/e/20/rvf5)

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError
____________________ ERROR at setup of test_upload_document ____________________

client = <starlette.testclient.TestClient object at 0x15c4bead0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843141696'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
____________________ ERROR at setup of test_list_documents _____________________

client = <starlette.testclient.TestClient object at 0x15c4bde10>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843143376'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
___________________ ERROR at setup of test_search_documents ____________________

client = <starlette.testclient.TestClient object at 0x15c4bd9d0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843148080'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_____________________ ERROR at setup of test_get_document ______________________

client = <starlette.testclient.TestClient object at 0x15beb56a0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843153120'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
____________________ ERROR at setup of test_delete_document ____________________

client = <starlette.testclient.TestClient object at 0x15beb57b0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837002400'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_______________ ERROR at setup of test_delete_document_not_found _______________

client = <starlette.testclient.TestClient object at 0x15beb5590>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5836997360'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
___________ ERROR at setup of test_upload_document_invalid_file_type ___________

client = <starlette.testclient.TestClient object at 0x15bcf8e20>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5836999376'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_____________ ERROR at setup of test_upload_document_server_error ______________

client = <starlette.testclient.TestClient object at 0x15bfc1f20>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5835164368'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
____________ ERROR at setup of test_list_documents_with_pagination _____________

client = <starlette.testclient.TestClient object at 0x15bfc18c0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5833714256'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
______________ ERROR at setup of test_list_documents_server_error ______________

client = <starlette.testclient.TestClient object at 0x15bfc0490>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5835162016'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_____________ ERROR at setup of test_search_documents_server_error _____________

client = <starlette.testclient.TestClient object at 0x15bcfb9b0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5833714256'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
___________ ERROR at setup of test_get_document_unauthorized_access ____________

client = <starlette.testclient.TestClient object at 0x15beb6690>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837003408'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_______________ ERROR at setup of test_get_document_server_error _______________

client = <starlette.testclient.TestClient object at 0x15beb7ac0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837012144'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________ ERROR at setup of test_list_documents_with_invalid_pagination _________

client = <starlette.testclient.TestClient object at 0x15beb57b0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837011472'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
___________ ERROR at setup of test_search_documents_with_empty_query ___________

client = <starlette.testclient.TestClient object at 0x15beb7130>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843148080'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_____________ ERROR at setup of test_upload_document_rate_limited ______________

client = <starlette.testclient.TestClient object at 0x15c4bf8a0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843143376'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
___________________ ERROR at setup of test_empty_file_upload ___________________

client = <starlette.testclient.TestClient object at 0x15c4bcaf0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843141696'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_____________ ERROR at setup of test_upload_document_with_metadata _____________

client = <starlette.testclient.TestClient object at 0x15c4bc5a0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843151776'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
______ ERROR at setup of test_search_documents_with_specific_user_context ______

client = <starlette.testclient.TestClient object at 0x15c4becf0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837930912'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________________ ERROR at setup of test_get_available_documents ________________

client = <starlette.testclient.TestClient object at 0x15bfc3bd0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837941328'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________________ ERROR at setup of test_ask_question_success __________________

client = <starlette.testclient.TestClient object at 0x15bfc2e00>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837939312'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
______________ ERROR at setup of test_ask_question_invalid_query _______________

client = <starlette.testclient.TestClient object at 0x15bfc3570>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837944688'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
______________ ERROR at setup of test_ask_question_error_handling ______________

client = <starlette.testclient.TestClient object at 0x15bbf59d0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843148752'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________ ERROR at setup of test_ask_question_with_invalid_document_ids _________

client = <starlette.testclient.TestClient object at 0x15c4bcd10>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843142368'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________ ERROR at setup of test_ask_question_with_rate_limit_reached __________

client = <starlette.testclient.TestClient object at 0x15c4bd480>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843150096'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_____________ ERROR at setup of test_get_documents_api_parameters ______________

client = <starlette.testclient.TestClient object at 0x15c4bf130>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843149424'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________ ERROR at setup of test_ask_question_with_question_parameter __________

client = <starlette.testclient.TestClient object at 0x15beb6470>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837002400'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________ ERROR at setup of test_ask_question_with_unprocessed_document _________

client = <starlette.testclient.TestClient object at 0x15beb6360>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5836997360'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________ ERROR at setup of test_ask_question_ollama_service_unavailable ________

client = <starlette.testclient.TestClient object at 0x15beb5ae0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837000048'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________ ERROR at setup of test_ask_question_with_empty_document_list _________

client = <starlette.testclient.TestClient object at 0x15beb7570>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5835162016'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________________ ERROR at setup of test_ask_question_rate_limit ________________

client = <starlette.testclient.TestClient object at 0x15bcfb680>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5833715936'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________ ERROR at setup of test_ask_question_with_invalid_parameters __________

client = <starlette.testclient.TestClient object at 0x15bcfbf00>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843150768'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________ ERROR at setup of test_ask_question_with_special_characters __________

client = <starlette.testclient.TestClient object at 0x15bfc2030>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837939984'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
______________ ERROR at setup of test_ask_question_without_cache _______________

client = <starlette.testclient.TestClient object at 0x15bfc17b0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837937296'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
___________ ERROR at setup of test_ask_question_with_very_long_query ___________

client = <starlette.testclient.TestClient object at 0x15bcfb790>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5833713920'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________________ ERROR at setup of test_read_users_superuser __________________

client = <starlette.testclient.TestClient object at 0x15beb7570>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5835168064'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________________ ERROR at setup of test_read_users_normal_user _________________

client = <starlette.testclient.TestClient object at 0x15beb7240>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5836997360'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_____________________ ERROR at setup of test_read_user_me ______________________

client = <starlette.testclient.TestClient object at 0x15beb4f30>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837004416'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
____________________ ERROR at setup of test_update_user_me _____________________

client = <starlette.testclient.TestClient object at 0x15beb7f00>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843152784'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________________ ERROR at setup of test_update_user_me_password ________________

client = <starlette.testclient.TestClient object at 0x15c4bc9e0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837002400'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
____________________ ERROR at setup of test_read_user_by_id ____________________

client = <starlette.testclient.TestClient object at 0x15c4bf570>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843144048'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_______________ ERROR at setup of test_read_user_by_id_not_found _______________

client = <starlette.testclient.TestClient object at 0x15c4bcf30>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843144384'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________________ ERROR at setup of test_create_user_superuser _________________

client = <starlette.testclient.TestClient object at 0x15c4bd8c0>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843142704'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________________ ERROR at setup of test_create_user_normal_user ________________

client = <starlette.testclient.TestClient object at 0x15c4bcd10>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843141024'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________________ ERROR at setup of test_update_user_superuser _________________

client = <starlette.testclient.TestClient object at 0x15bfc3350>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837938304'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________________ ERROR at setup of test_update_user_normal_user ________________

client = <starlette.testclient.TestClient object at 0x15bfc06b0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837946032'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________________ ERROR at setup of test_delete_user_superuser _________________

client = <starlette.testclient.TestClient object at 0x15c4bef10>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843147072'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
________________ ERROR at setup of test_delete_user_normal_user ________________

client = <starlette.testclient.TestClient object at 0x15c4bcaf0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843151776'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
______ ERROR at setup of test_create_user_validation[invalid_data0-email] ______

client = <starlette.testclient.TestClient object at 0x15c4bcd10>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843150432'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
____ ERROR at setup of test_create_user_validation[invalid_data1-password] _____

client = <starlette.testclient.TestClient object at 0x15c4bd040>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843153120'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
____ ERROR at setup of test_create_user_validation[invalid_data2-password] _____

client = <starlette.testclient.TestClient object at 0x15beb58c0>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837004752'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
______ ERROR at setup of test_create_user_validation[invalid_data3-email] ______

client = <starlette.testclient.TestClient object at 0x15beb78a0>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5836997360'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
______ ERROR at setup of test_create_user_validation[invalid_data4-email] ______

client = <starlette.testclient.TestClient object at 0x15beb6e00>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837000048'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_______________ ERROR at setup of test_concurrent_read_requests ________________

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>

    async def _start_transaction(self):
        if self.isolation_level == "autocommit":
            return
    
        try:
            self._transaction = self._connection.transaction(
                isolation=self.isolation_level,
                readonly=self.readonly,
                deferrable=self.deferrable,
            )
>           await self._transaction.start()

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:843: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/asyncpg/transaction.py:146: in start
    await self._connection.execute(query)
venv/lib/python3.13/site-packages/asyncpg/connection.py:349: in execute
    result = await self._protocol.query(query, timeout)
asyncpg/protocol/protocol.pyx:360: in query
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   asyncpg.exceptions._base.InterfaceError: cannot perform operation: another operation is in progress

asyncpg/protocol/protocol.pyx:745: InterfaceError

The above exception was the direct cause of the following exception:

self = <sqlalchemy.engine.base.Connection object at 0x15bf90650>
dialect = <sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg object at 0x1084eda90>
context = <sqlalchemy.dialects.postgresql.asyncpg.PGExecutionContext_asyncpg object at 0x15c16ad50>
statement = <sqlalchemy.dialects.postgresql.asyncpg.PGCompiler_asyncpg object at 0x15be9b0e0>
parameters = [('testuser',)]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.InterfaceError: <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError

The above exception was the direct cause of the following exception:

client = <starlette.testclient.TestClient object at 0x15beb56a0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
app/services/user.py:44: in get_by_username_async
    result = await db.execute(select(User).filter(User.username == username))
venv/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
venv/lib/python3.13/site-packages/sqlalchemy/orm/context.py:305: in orm_execute_statement
    result = conn.execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1416: in execute
    return meth(
venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:516: in _execute_on_connection
    return connection._execute_clauseelement(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1638: in _execute_clauseelement
    ret = self._execute_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1843: in _execute_context
    return self._exec_single_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1983: in _exec_single_context
    self._handle_dbapi_exception(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2352: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: in _exec_single_context
    self.dialect.do_execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.exc.InterfaceError: (sqlalchemy.dialects.postgresql.asyncpg.InterfaceError) <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress
E                   [SQL: SELECT users.id, users.email, users.username, users.hashed_password, users.is_active, users.is_superuser, users.created_at, users.updated_at, users.age 
E                   FROM users 
E                   WHERE users.username = $1::VARCHAR]
E                   [parameters: ('testuser',)]
E                   (Background on this error at: https://sqlalche.me/e/20/rvf5)

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError
________________ ERROR at setup of test_get_user_me_performance ________________

client = <starlette.testclient.TestClient object at 0x15bbf67a0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    @pytest.fixture(scope="function")
    def user_token_headers(client, normal_user) -> Dict[str, str]:
        """
        Get token headers for a normal user.
    
        This fixture attempts to authenticate with the normal_user fixture
        and returns the token headers needed for authenticated endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837009792'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_________________ ERROR at setup of test_get_users_performance _________________

client = <starlette.testclient.TestClient object at 0x15beb5e10>
superuser = {'email': 'admin@example.com', 'id': 1, 'password': 'adminpass123', 'username': 'admin'}

    @pytest.fixture(scope="function")
    def superuser_token_headers(client, superuser) -> Dict[str, str]:
        """
        Get token headers for a superuser.
    
        This fixture attempts to authenticate with the superuser fixture
        and returns the token headers needed for admin endpoints.
    
        If login fails, it generates a valid token directly using the secret key.
        """
        login_data = {
            "username": superuser["username"],
            "password": superuser["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/conftest.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837005424'>, username = 'admin'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
=================================== FAILURES ===================================
______________________________ test_login_success ______________________________

client = <starlette.testclient.TestClient object at 0x15bb76cf0>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    def test_login_success(client: TestClient, normal_user: dict):
        """Test successful login."""
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/test_api/test_auth.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837001728'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
---------------------------- Captured stderr setup -----------------------------
WARNING:passlib.handlers.bcrypt:(trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
------------------------------ Captured log setup ------------------------------
WARNING  passlib.handlers.bcrypt:bcrypt.py:622 (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
              ^^^^^^^^^^^^^^^^^
AttributeError: module 'bcrypt' has no attribute '__about__'
______________________ test_login_fail_incorrect_password ______________________

client = <starlette.testclient.TestClient object at 0x15bb1ad50>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    def test_login_fail_incorrect_password(client: TestClient, normal_user: dict):
        """Test login with incorrect password."""
        login_data = {
            "username": normal_user["username"],
            "password": "wrongpassword",
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/test_api/test_auth.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5835168064'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
_______________________ test_login_fail_nonexistent_user _______________________

client = <starlette.testclient.TestClient object at 0x15c4ae710>

    def test_login_fail_nonexistent_user(client: TestClient):
        """Test login with nonexistent user."""
        login_data = {
            "username": "nonexistentuser",
            "password": "password123",
        }
>       response = client.post("/api/auth/login", data=login_data)

tests/test_api/test_auth.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5837011472'>
username = 'nonexistentuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
____________________________ test_register_success _____________________________

client = <starlette.testclient.TestClient object at 0x15c4cc770>

    def test_register_success(client: TestClient):
        """Test successful user registration."""
        user_data = {
            "email": "newuser@example.com",
            "username": "newuser",
            "password": "newpassword123",
        }
>       response = client.post("/api/auth/register", json=user_data)

tests/test_api/test_auth.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:58: in register_user
    user = await UserService.get_by_email_async(db, email=user_in.email)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843145056'>
email = 'newuser@example.com'

    @staticmethod
    async def get_by_email_async(db: AsyncSession, email: str) -> Optional[User]:
        """Get a user by email using async session."""
        result = await db.execute(select(User).filter(User.email == email))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:34: AttributeError
______________________ test_register_fail_duplicate_email ______________________

client = <starlette.testclient.TestClient object at 0x15c4cd940>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    def test_register_fail_duplicate_email(client: TestClient, normal_user: dict):
        """Test registration with duplicate email."""
        user_data = {
            "email": normal_user["email"],
            "username": "uniqueusername",
            "password": "password123",
        }
>       response = client.post("/api/auth/register", json=user_data)

tests/test_api/test_auth.py:65: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:449: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:58: in register_user
    user = await UserService.get_by_email_async(db, email=user_in.email)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843148416'>, email = 'user@example.com'

    @staticmethod
    async def get_by_email_async(db: AsyncSession, email: str) -> Optional[User]:
        """Get a user by email using async session."""
        result = await db.execute(select(User).filter(User.email == email))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:34: AttributeError
____________________ test_register_fail_duplicate_username _____________________

client = <starlette.testclient.TestClient object at 0x15c478b90>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    def test_register_fail_duplicate_username(client: TestClient, normal_user: dict):
        """Test registration with duplicate username."""
        user_data = {
            "email": "unique@example.com",
            "username": normal_user["username"],
            "password": "password123",
        }
>       response = client.post("/api/auth/register", json=user_data)

tests/test_api/test_auth.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:449: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:58: in register_user
    user = await UserService.get_by_email_async(db, email=user_in.email)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843151776'>
email = 'unique@example.com'

    @staticmethod
    async def get_by_email_async(db: AsyncSession, email: str) -> Optional[User]:
        """Get a user by email using async session."""
        result = await db.execute(select(User).filter(User.email == email))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:34: AttributeError
___________________________ test_login_rate_limiting ___________________________

client = <starlette.testclient.TestClient object at 0x15c4bef10>

    def test_login_rate_limiting(client):
        """
        Test that login endpoints have rate limiting protection.
    
        This test verifies that:
        1. Multiple rapid login attempts with incorrect credentials trigger rate limiting
        2. The rate limiting mechanism returns appropriate HTTP status codes
        3. Error messages do not reveal sensitive information
    
        Expected behavior:
        - Initial incorrect login attempts should return 401 Unauthorized or 422 Unprocessable Entity
        - After multiple rapid attempts, rate limiting should trigger (429 Too Many Requests)
        - Error messages should be generic and not reveal if username exists
        """
        # Test data - use proper format to avoid 422 errors
        login_data = {
            "username": "nonexistent_user@example.com",
            "password": "incorrect_password"
        }
    
        # Make multiple rapid login attempts
        responses = []
        for _ in range(10):
>           response = client.post("/api/auth/login", data=login_data)  # Use form data instead of JSON

tests/test_api/test_auth_security.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
app/services/user.py:44: in get_by_username_async
    result = await db.execute(select(User).filter(User.username == username))
venv/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
venv/lib/python3.13/site-packages/sqlalchemy/orm/context.py:305: in orm_execute_statement
    result = conn.execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1416: in execute
    return meth(
venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:516: in _execute_on_connection
    return connection._execute_clauseelement(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1638: in _execute_clauseelement
    ret = self._execute_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1843: in _execute_context
    return self._exec_single_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1983: in _exec_single_context
    self._handle_dbapi_exception(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2355: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: in _exec_single_context
    self.dialect.do_execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:843: in _start_transaction
    await self._transaction.start()
venv/lib/python3.13/site-packages/asyncpg/transaction.py:146: in start
    await self._connection.execute(query)
venv/lib/python3.13/site-packages/asyncpg/connection.py:349: in execute
    result = await self._protocol.query(query, timeout)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='anyio.from_thread.BlockingPortal._call_func' coro=<BlockingPortal._call_func() running at /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/anyio/from_thread.py:221> cb=[TaskGroup._spawn.<locals>.task_done() at /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/anyio/_backends/_asyncio.py:789]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:375: RuntimeError
----------------------------- Captured stderr call -----------------------------
INFO:httpx:HTTP Request: POST http://testserver/api/auth/login "HTTP/1.1 401 Unauthorized"
------------------------------ Captured log call -------------------------------
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/auth/login "HTTP/1.1 401 Unauthorized"
___________________________ test_password_complexity ___________________________

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>

    async def _start_transaction(self):
        if self.isolation_level == "autocommit":
            return
    
        try:
            self._transaction = self._connection.transaction(
                isolation=self.isolation_level,
                readonly=self.readonly,
                deferrable=self.deferrable,
            )
>           await self._transaction.start()

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:843: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/asyncpg/transaction.py:146: in start
    await self._connection.execute(query)
venv/lib/python3.13/site-packages/asyncpg/connection.py:349: in execute
    result = await self._protocol.query(query, timeout)
asyncpg/protocol/protocol.pyx:360: in query
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   asyncpg.exceptions._base.InterfaceError: cannot perform operation: another operation is in progress

asyncpg/protocol/protocol.pyx:745: InterfaceError

The above exception was the direct cause of the following exception:

self = <sqlalchemy.engine.base.Connection object at 0x15bf93c50>
dialect = <sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg object at 0x1084eda90>
context = <sqlalchemy.dialects.postgresql.asyncpg.PGExecutionContext_asyncpg object at 0x15bfc39b0>
statement = <sqlalchemy.dialects.postgresql.asyncpg.PGCompiler_asyncpg object at 0x15c7d8050>
parameters = [('test_password_security_onlyletters@example.com',)]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.InterfaceError: <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError

The above exception was the direct cause of the following exception:

client = <starlette.testclient.TestClient object at 0x15bfc2be0>

    def test_password_complexity(client):
        """
        Test password complexity requirements during user registration.
    
        This test verifies that:
        1. Weak passwords are rejected
        2. Strong passwords are accepted
        3. Error messages provide guidance on password requirements
    
        Expected behavior:
        - Short passwords should be rejected
        - Passwords without sufficient complexity should be rejected
        - Error messages should explain the password requirements
        """
        # Base registration data
        base_data = {
            "email": "test_password_security@example.com",
            "username": "securitytest",  # Add username field if required
            "full_name": "Test User"
        }
    
        # Test cases for passwords - accept either 400 or 422 status codes as both indicate validation failure
        # Also accept 200/201 if the API doesn't enforce password complexity
        password_tests = [
            # (password, expected_status_codes, reason)
            ("short", [200, 201, 400, 422], "Too short"),
            ("onlyletters", [200, 201, 400, 422], "No numbers or special chars"),
            ("123456789", [200, 201, 400, 422], "Only numbers"),
            ("password123", [200, 201, 400, 422], "Common password"),
            # Last test depends on API implementation
            # If the API actually implements stronger password rules
            ("Strong_Password_123!", [200, 201, 400, 422], "API may have specific password rules")
        ]
    
        for password, expected_statuses, reason in password_tests:
            # Create registration data with the test password and unique identifiers
            unique_email = f"test_password_security_{password}@example.com"
            # Ensure username is alphanumeric
            unique_username = f"securitytest{password}".replace('!', '1').replace('_', '2').replace('-', '3')
            reg_data = {**base_data, "password": password, "email": unique_email, "username": unique_username}
    
            # Attempt registration
>           response = client.post("/api/auth/register", json=reg_data)

tests/test_api/test_auth_security.py:145: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:58: in register_user
    user = await UserService.get_by_email_async(db, email=user_in.email)
app/services/user.py:33: in get_by_email_async
    result = await db.execute(select(User).filter(User.email == email))
venv/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
venv/lib/python3.13/site-packages/sqlalchemy/orm/context.py:305: in orm_execute_statement
    result = conn.execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1416: in execute
    return meth(
venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:516: in _execute_on_connection
    return connection._execute_clauseelement(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1638: in _execute_clauseelement
    ret = self._execute_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1843: in _execute_context
    return self._exec_single_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1983: in _exec_single_context
    self._handle_dbapi_exception(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2352: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: in _exec_single_context
    self.dialect.do_execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.exc.InterfaceError: (sqlalchemy.dialects.postgresql.asyncpg.InterfaceError) <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress
E                   [SQL: SELECT users.id, users.email, users.username, users.hashed_password, users.is_active, users.is_superuser, users.created_at, users.updated_at, users.age 
E                   FROM users 
E                   WHERE users.email = $1::VARCHAR]
E                   [parameters: ('test_password_security_onlyletters@example.com',)]
E                   (Background on this error at: https://sqlalche.me/e/20/rvf5)

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError
----------------------------- Captured stderr call -----------------------------
INFO:httpx:HTTP Request: POST http://testserver/api/auth/register "HTTP/1.1 422 Unprocessable Entity"
------------------------------ Captured log call -------------------------------
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/auth/register "HTTP/1.1 422 Unprocessable Entity"
_________________________ test_multiple_user_sessions __________________________

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>

    async def _start_transaction(self):
        if self.isolation_level == "autocommit":
            return
    
        try:
            self._transaction = self._connection.transaction(
                isolation=self.isolation_level,
                readonly=self.readonly,
                deferrable=self.deferrable,
            )
>           await self._transaction.start()

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:843: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/asyncpg/transaction.py:146: in start
    await self._connection.execute(query)
venv/lib/python3.13/site-packages/asyncpg/connection.py:349: in execute
    result = await self._protocol.query(query, timeout)
asyncpg/protocol/protocol.pyx:360: in query
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   asyncpg.exceptions._base.InterfaceError: cannot perform operation: another operation is in progress

asyncpg/protocol/protocol.pyx:745: InterfaceError

The above exception was the direct cause of the following exception:

self = <sqlalchemy.engine.base.Connection object at 0x15cb2d850>
dialect = <sqlalchemy.dialects.postgresql.asyncpg.PGDialect_asyncpg object at 0x1084eda90>
context = <sqlalchemy.dialects.postgresql.asyncpg.PGExecutionContext_asyncpg object at 0x15c12eb50>
statement = <sqlalchemy.dialects.postgresql.asyncpg.PGCompiler_asyncpg object at 0x15c894cd0>
parameters = [(241,)]

    def _exec_single_context(
        self,
        dialect: Dialect,
        context: ExecutionContext,
        statement: Union[str, Compiled],
        parameters: Optional[_AnyMultiExecuteParams],
    ) -> CursorResult[Any]:
        """continue the _execute_context() method for a single DBAPI
        cursor.execute() or cursor.executemany() call.
    
        """
        if dialect.bind_typing is BindTyping.SETINPUTSIZES:
            generic_setinputsizes = context._prepare_set_input_sizes()
    
            if generic_setinputsizes:
                try:
                    dialect.do_set_input_sizes(
                        context.cursor, generic_setinputsizes, context
                    )
                except BaseException as e:
                    self._handle_dbapi_exception(
                        e, str(statement), parameters, None, context
                    )
    
        cursor, str_statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        effective_parameters: Optional[_AnyExecuteParams]
    
        if not context.executemany:
            effective_parameters = parameters[0]
        else:
            effective_parameters = parameters
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                str_statement, effective_parameters = fn(
                    self,
                    cursor,
                    str_statement,
                    effective_parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self._log_info(str_statement)
    
            stats = context._get_cache_stats()
    
            if not self.engine.hide_parameters:
                self._log_info(
                    "[%s] %r",
                    stats,
                    sql_util._repr_params(
                        effective_parameters,
                        batches=10,
                        ismulti=context.executemany,
                    ),
                )
            else:
                self._log_info(
                    "[%s] [SQL parameters hidden due to hide_parameters=True]",
                    stats,
                )
    
        evt_handled: bool = False
        try:
            if context.execute_style is ExecuteStyle.EXECUTEMANY:
                effective_parameters = cast(
                    "_CoreMultiExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor,
                        str_statement,
                        effective_parameters,
                        context,
                    )
            elif not effective_parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, str_statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, str_statement, context
                    )
            else:
                effective_parameters = cast(
                    "_CoreSingleExecuteParams", effective_parameters
                )
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(
                            cursor,
                            str_statement,
                            effective_parameters,
                            context,
                        ):
                            evt_handled = True
                            break
                if not evt_handled:
>                   self.dialect.do_execute(
                        cursor, str_statement, effective_parameters, context
                    )

venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.dialects.postgresql.asyncpg.AsyncAdapt_asyncpg_dbapi.InterfaceError: <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError

The above exception was the direct cause of the following exception:

client = <starlette.testclient.TestClient object at 0x15bcf86b0>

    @pytest.mark.asyncio
    async def test_multiple_user_sessions(client):
        """
        Test the application's ability to handle multiple user sessions concurrently.
    
        This test verifies that:
        1. Multiple users can authenticate and maintain separate sessions
        2. Session data remains isolated between users
        3. User-specific operations return the correct data for each user
    
        Expected behavior:
        - All users can authenticate concurrently
        - Each user sees only their own data
        - User sessions don't interfere with each other
        """
        # Import necessary modules
        from app.db.session import get_db
        from app.models.user import User
        from app.core.security import get_password_hash, create_access_token
    
        # Create test users directly in the database
        test_users = []
        db = next(get_db())
    
        # Use timestamp to ensure unique emails
        timestamp = int(time.time())
    
        for i in range(3):  # Create 3 test users
            # Check if user already exists
            email = f"concurrent_test_user_{i}_{timestamp}@example.com"
            username = f"user_{i}_{timestamp}"
            password = f"TestPassword123!_{i}"
    
            existing_user = db.query(User).filter(User.email == email).first()
            if existing_user:
                user_id = existing_user.id
            else:
                user = User(
                    email=email,
                    username=username,
                    hashed_password=get_password_hash(password),
                    is_active=True
                )
                db.add(user)
                db.commit()
                db.refresh(user)
                user_id = user.id
    
            test_users.append({
                "id": user_id,
                "email": email,
                "username": username,
                "password": password
            })
    
        # Create tokens and headers for each user
        for user in test_users:
            token = create_access_token(subject=user["id"])
            user["token"] = token
            user["headers"] = {"Authorization": f"Bearer {token}"}
    
        # Function to simulate a user's activity
        def user_activity(user_data):
            results = {}
    
            # Get user profile
            profile_response = client.get("/api/users/me", headers=user_data["headers"])
            results["profile"] = profile_response.status_code == 200
    
            if results["profile"]:
                # Verify correct user data
                profile_data = profile_response.json()
                results["correct_user"] = profile_data["email"] == user_data["email"]
    
            return results
    
        # Execute concurrent user activities
        with ThreadPoolExecutor(max_workers=len(test_users)) as executor:
            futures = [executor.submit(user_activity, user) for user in test_users]
    
>           results = [future.result() for future in as_completed(futures)]

tests/test_performance/test_concurrency.py:262: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:449: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/thread.py:59: in run
    result = self.fn(*self.args, **self.kwargs)
tests/test_performance/test_concurrency.py:248: in user_activity
    profile_response = client.get("/api/users/me", headers=user_data["headers"])
venv/lib/python3.13/site-packages/starlette/testclient.py:465: in get
    return super().get(
venv/lib/python3.13/site-packages/httpx/_client.py:1053: in get
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:291: in app
    solved_result = await solve_dependencies(
venv/lib/python3.13/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
venv/lib/python3.13/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
app/api/deps.py:87: in get_current_user_async
    result = await db.execute(
venv/lib/python3.13/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
venv/lib/python3.13/site-packages/sqlalchemy/orm/session.py:2260: in _execute_internal
    result = conn.execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1416: in execute
    return meth(
venv/lib/python3.13/site-packages/sqlalchemy/sql/elements.py:516: in _execute_on_connection
    return connection._execute_clauseelement(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1638: in _execute_clauseelement
    ret = self._execute_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1843: in _execute_context
    return self._exec_single_context(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1983: in _exec_single_context
    self._handle_dbapi_exception(
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:2352: in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
venv/lib/python3.13/site-packages/sqlalchemy/engine/base.py:1964: in _exec_single_context
    self.dialect.do_execute(
venv/lib/python3.13/site-packages/sqlalchemy/engine/default.py:942: in do_execute
    cursor.execute(statement, parameters)
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
venv/lib/python3.13/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:515: in _prepare_and_execute
    await adapt_connection._start_transaction()
venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:845: in _start_transaction
    self._handle_exception(error)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <AdaptedConnection <asyncpg.connection.Connection object at 0x15bfb9b80>>
error = InterfaceError('cannot perform operation: another operation is in progress')

    def _handle_exception(self, error):
        if self._connection.is_closed():
            self._transaction = None
            self._started = False
    
        if not isinstance(error, AsyncAdapt_asyncpg_dbapi.Error):
            exception_mapping = self.dbapi._asyncpg_error_translate
    
            for super_ in type(error).__mro__:
                if super_ in exception_mapping:
                    translated_error = exception_mapping[super_](
                        "%s: %s" % (type(error), error)
                    )
                    translated_error.pgcode = translated_error.sqlstate = (
                        getattr(error, "sqlstate", None)
                    )
>                   raise translated_error from error
E                   sqlalchemy.exc.InterfaceError: (sqlalchemy.dialects.postgresql.asyncpg.InterfaceError) <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress
E                   [SQL: SELECT * FROM users WHERE id = $1]
E                   [parameters: (241,)]
E                   (Background on this error at: https://sqlalche.me/e/20/rvf5)

venv/lib/python3.13/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:792: InterfaceError
____________________________ test_login_performance ____________________________

client = <starlette.testclient.TestClient object at 0x15bfc0160>
normal_user = {'email': 'user@example.com', 'id': 1, 'password': 'password123', 'username': 'testuser'}

    def test_login_performance(client: TestClient, normal_user: dict):
        """Test login endpoint performance."""
        login_data = {
            "username": normal_user["username"],
            "password": normal_user["password"],
        }
    
        # Perform multiple requests to get average response time
        response_times = []
        for _ in range(10):
>           _, response_time = measure_response_time(
                client, "/api/auth/login", method="post", data=login_data
            )

tests/test_performance.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_performance.py:13: in measure_response_time
    response = client.post(url, headers=headers, json=json, data=data)
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:456: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:26: in login_access_token
    user = await UserService.authenticate_async(
app/services/user.py:151: in authenticate_async
    user = await UserService.get_by_username_async(db, username)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5843146736'>, username = 'testuser'

    @staticmethod
    async def get_by_username_async(db: AsyncSession, username: str) -> Optional[User]:
        """Get a user by username using async session."""
        result = await db.execute(select(User).filter(User.username == username))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:45: AttributeError
__________________________ test_register_performance ___________________________

client = <starlette.testclient.TestClient object at 0x15bcfbf00>

    def test_register_performance(client: TestClient):
        """Test register endpoint performance."""
        # Perform multiple requests to get average response time
        response_times = []
        for i in range(10):
            user_data = {
                "email": f"perftest{i}@example.com",
                "username": f"perftest{i}",
                "password": "password123",
            }
    
>           _, response_time = measure_response_time(
                client, "/api/auth/register", method="post", json=user_data
            )

tests/test_performance.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_performance.py:13: in measure_response_time
    response = client.post(url, headers=headers, json=json, data=data)
venv/lib/python3.13/site-packages/starlette/testclient.py:538: in post
    return super().post(
venv/lib/python3.13/site-packages/httpx/_client.py:1144: in post
    return self.request(
venv/lib/python3.13/site-packages/starlette/testclient.py:437: in request
    return super().request(
venv/lib/python3.13/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
venv/lib/python3.13/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
venv/lib/python3.13/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
venv/lib/python3.13/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
venv/lib/python3.13/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
venv/lib/python3.13/site-packages/starlette/testclient.py:340: in handle_request
    raise exc
venv/lib/python3.13/site-packages/starlette/testclient.py:337: in handle_request
    portal.call(self.app, scope, receive, send)
venv/lib/python3.13/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:449: in result
    return self.__get_result()
../../.pyenv/versions/3.13.1/lib/python3.13/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
venv/lib/python3.13/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
venv/lib/python3.13/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/applications.py:112: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:187: in __call__
    raise exc
venv/lib/python3.13/site-packages/starlette/middleware/errors.py:165: in __call__
    await self.app(scope, receive, _send)
venv/lib/python3.13/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:714: in __call__
    await self.middleware_stack(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:734: in app
    await route.handle(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:288: in handle
    await self.app(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/routing.py:76: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
venv/lib/python3.13/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
venv/lib/python3.13/site-packages/starlette/routing.py:73: in app
    response = await f(request)
venv/lib/python3.13/site-packages/fastapi/routing.py:301: in app
    raw_response = await run_endpoint_function(
venv/lib/python3.13/site-packages/fastapi/routing.py:212: in run_endpoint_function
    return await dependant.call(**values)
app/api/routes/auth.py:58: in register_user
    user = await UserService.get_by_email_async(db, email=user_in.email)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <AsyncMock spec='AsyncSession' id='5835163360'>
email = 'perftest0@example.com'

    @staticmethod
    async def get_by_email_async(db: AsyncSession, email: str) -> Optional[User]:
        """Get a user by email using async session."""
        result = await db.execute(select(User).filter(User.email == email))
>       return result.scalars().first()
E       AttributeError: 'coroutine' object has no attribute 'first'

app/services/user.py:34: AttributeError
_____________________________ test_upload_document _____________________________

db = <MagicMock spec='AsyncSession' id='5847513280'>
user = <MagicMock spec='User' id='5841716288'>
file = <MagicMock spec='UploadFile' id='5841716624'>

    @staticmethod
    async def upload_document(
        db: AsyncSession,
        user: User,
        file: UploadFile
    ) -> Document:
        """
        Upload a document file and create initial database entry.
    
        Args:
            db: Database session
            user: User object
            file: Uploaded file
    
        Returns:
            Document: The created document record
        """
        # Verify user exists
        if not user:
            raise ValueError("User not found")
    
        # Create document record
        document_in = {
            "user_id": user.id,
            "filename": file.filename,
            "content_type": file.content_type,
            "file_size": file.size if hasattr(file, 'size') else None,
            "status": "pending"  # Initial status
        }
    
        # Safely handle the document creation
        temp_file_path = None
        try:
            # Use direct SQL to insert the document
            stmt = text("""
                INSERT INTO documents (user_id, filename, content_type, file_size, status, created_at)
                VALUES (:user_id, :filename, :content_type, :file_size, :status, NOW())
                RETURNING id, user_id, filename, content_type, file_size, file_path, status, page_count, error_message, created_at, updated_at
            """)
    
            result = await db.execute(
                stmt,
                {
                    "user_id": document_in["user_id"],
                    "filename": document_in["filename"],
                    "content_type": document_in["content_type"],
                    "file_size": document_in["file_size"],
                    "status": document_in["status"]
                }
            )
    
            # Get the inserted document data
            doc_row = result.first()
    
            # Create a Document instance with the fetched values to return
            document = Document(
>               id=doc_row.id,
                user_id=doc_row.user_id,
                filename=doc_row.filename,
                content_type=doc_row.content_type,
                file_size=doc_row.file_size,
                file_path=doc_row.file_path,
                status=doc_row.status,
                page_count=doc_row.page_count,
                error_message=doc_row.error_message,
                created_at=doc_row.created_at,
                updated_at=doc_row.updated_at
            )
E           AttributeError: 'coroutine' object has no attribute 'id'

app/services/document.py:97: AttributeError

During handling of the above exception, another exception occurred:

mock_db = <MagicMock spec='AsyncSession' id='5847513280'>
mock_user = <MagicMock spec='User' id='5841716288'>
mock_upload_file = <MagicMock spec='UploadFile' id='5841716624'>

    @pytest.mark.asyncio
    async def test_upload_document(mock_db, mock_user, mock_upload_file):
        """
        Test document upload and initial processing.
    
        This test verifies that:
        1. The upload_document method correctly creates a new document in the database
        2. The file content is saved to a temporary location
        3. The document is created with the correct metadata (user_id, filename, content_type)
        4. The document is initially set to "pending" status
        5. A background processing task is initiated for the uploaded document
    
        Expected behavior:
        - A new Document object should be created in the database
        - The document should have "pending" status initially
        - Proper file metadata should be extracted and stored
        - The temporary file should be created with the uploaded content
        - A background task should be scheduled for processing
    
        File handling:
        - Verifies temporary file creation
        - Ensures file content is preserved
        - Confirms the file path is properly tracked for background processing
    
        Edge cases:
        - Tests that document IDs are assigned correctly
        - Ensures the filename is sanitized and preserved
        - Verifies content type is correctly identified and stored
        """
        # Arrange
        filename = "test.pdf"
        content_type = "application/pdf"
    
        # Mock db add and commit
        mock_db.add = MagicMock()
        mock_db.commit = MagicMock()
        mock_db.refresh = MagicMock()
        mock_db.rollback = MagicMock()
    
        # Create a real Document object to be returned
        document = Document(
            id=1,
            user_id=mock_user.id,
            filename="test_document.pdf",
            content_type="application/pdf",
            status="pending",
            error_message=None
        )
    
        # Make mock_db.refresh update the document
        def refresh_mock(doc):
            doc.id = 1
        mock_db.refresh.side_effect = refresh_mock
    
        # Mock create_task
        with patch('asyncio.create_task') as mock_create_task, \
             patch('tempfile.NamedTemporaryFile'), \
             patch.object(DocumentService, '_process_document') as mock_process_document:
    
            # Make mock_process_document awaitable
            mock_process_coro = AsyncMock()
            mock_process_document.return_value = mock_process_coro()
    
            # Perform test
>           result = await DocumentService.upload_document(
                db=mock_db,
                user=mock_user,
                file=mock_upload_file
            )

tests/test_services/test_document_service.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

db = <MagicMock spec='AsyncSession' id='5847513280'>
user = <MagicMock spec='User' id='5841716288'>
file = <MagicMock spec='UploadFile' id='5841716624'>

    @staticmethod
    async def upload_document(
        db: AsyncSession,
        user: User,
        file: UploadFile
    ) -> Document:
        """
        Upload a document file and create initial database entry.
    
        Args:
            db: Database session
            user: User object
            file: Uploaded file
    
        Returns:
            Document: The created document record
        """
        # Verify user exists
        if not user:
            raise ValueError("User not found")
    
        # Create document record
        document_in = {
            "user_id": user.id,
            "filename": file.filename,
            "content_type": file.content_type,
            "file_size": file.size if hasattr(file, 'size') else None,
            "status": "pending"  # Initial status
        }
    
        # Safely handle the document creation
        temp_file_path = None
        try:
            # Use direct SQL to insert the document
            stmt = text("""
                INSERT INTO documents (user_id, filename, content_type, file_size, status, created_at)
                VALUES (:user_id, :filename, :content_type, :file_size, :status, NOW())
                RETURNING id, user_id, filename, content_type, file_size, file_path, status, page_count, error_message, created_at, updated_at
            """)
    
            result = await db.execute(
                stmt,
                {
                    "user_id": document_in["user_id"],
                    "filename": document_in["filename"],
                    "content_type": document_in["content_type"],
                    "file_size": document_in["file_size"],
                    "status": document_in["status"]
                }
            )
    
            # Get the inserted document data
            doc_row = result.first()
    
            # Create a Document instance with the fetched values to return
            document = Document(
                id=doc_row.id,
                user_id=doc_row.user_id,
                filename=doc_row.filename,
                content_type=doc_row.content_type,
                file_size=doc_row.file_size,
                file_path=doc_row.file_path,
                status=doc_row.status,
                page_count=doc_row.page_count,
                error_message=doc_row.error_message,
                created_at=doc_row.created_at,
                updated_at=doc_row.updated_at
            )
    
            await db.commit()
    
            # Save document ID for the background task
            document_id = document.id
    
            # Create a copy of the file for processing
            # This is necessary because the file might be closed after the request is completed
            with tempfile.NamedTemporaryFile(delete=False, suffix=Path(file.filename).suffix) as temp_file:
                # Reset file position
                await file.seek(0)
    
                # Write file content to temp file
                content = await file.read()
                temp_file.write(content)
                temp_file_path = temp_file.name
    
            # Initiate the document processing in the background
            asyncio.create_task(
                DocumentService._process_document(document_id, temp_file_path, file.content_type)
            )
    
            return document
    
        except Exception as e:
            # Clean up temp file if it exists
            if temp_file_path and os.path.exists(temp_file_path):
                os.unlink(temp_file_path)
            # Roll back the transaction in case of error
>           await db.rollback()
E           TypeError: object MagicMock can't be used in 'await' expression

app/services/document.py:138: TypeError
___________________________ test_get_document_by_id ____________________________

mock_db = <MagicMock spec='AsyncSession' id='5847507568'>

    @pytest.mark.asyncio
    async def test_get_document_by_id(mock_db):
        # Mock db query execution
        mock_document = MagicMock(spec=Document)
        mock_document.id = 1
        mock_document.user_id = 1
    
        # Set up the mock chain - important: first() returns directly, not an awaitable
        query_mock = MagicMock()
        filter_mock = MagicMock()
        filter_mock.first = MagicMock(return_value=mock_document)
    
        mock_db.query.return_value = query_mock
        query_mock.filter.return_value = filter_mock
    
        # Test retrieval
        result = await DocumentService.get_document_by_id(mock_db, document_id=1)
    
        # Verify result
>       assert result is mock_document
E       AssertionError: assert None is <MagicMock spec='Document' id='5841720320'>

tests/test_services/test_document_service.py:173: AssertionError
----------------------------- Captured stderr call -----------------------------
ERROR:app.services.document:Error in get_document_by_id: 'coroutine' object has no attribute 'id'
------------------------------ Captured log call -------------------------------
ERROR    app.services.document:document.py:767 Error in get_document_by_id: 'coroutine' object has no attribute 'id'
________________________ test_get_documents_by_user_id _________________________

mock_db = <MagicMock spec='AsyncSession' id='5841724688'>

    @pytest.mark.asyncio
    async def test_get_documents_by_user_id(mock_db):
        # Mock result set
        mock_documents = [MagicMock(spec=Document) for _ in range(3)]
        mock_total = 3
    
        # Set up mock functions
        filter_mock = MagicMock()
        filter_mock.scalar.return_value = mock_total
    
        # Mock query chain
        mock_db.query.return_value.filter.return_value = filter_mock
        mock_db.query.return_value.filter.return_value.order_by.return_value.offset.return_value.limit.return_value.all.return_value = mock_documents
    
        # Test retrieval
        result, total = await DocumentService.get_documents_by_user_id(
            mock_db, user_id=1, skip=0, limit=10
        )
    
        # Verify results
>       assert result == mock_documents
E       AssertionError: assert [] == [<MagicMock s...'5841728048'>]
E         
E         Right contains 3 more items, first extra item: <MagicMock spec='Document' id='5841727376'>
E         Use -v to get more diff

tests/test_services/test_document_service.py:199: AssertionError
_______________________ test_vector_search_with_pgvector _______________________

db = <sqlalchemy.orm.session.Session object at 0x15c4dcf50>
mock_embedding = [0.17153195308683078, 0.47148343673880777, 0.4943659085744436, 0.374200244568504, 0.08716999865240982, 0.9001508799155494, ...]

    @pytest.mark.asyncio
    async def test_vector_search_with_pgvector(db, mock_embedding):
        """Test vector search using pgvector."""
        # Mock the necessary elements for testing
        user_id = 1
        query = "test query"
        limit = 5
    
        # Mock _generate_embeddings to return a fixed embedding vector
        with patch.object(
            DocumentService, '_generate_embeddings', return_value=mock_embedding
        ) as mock_generate:
    
            # Mock the SQLAlchemy execute to simulate pgvector results
            mock_result = [
                MagicMock(id=1, document_id=1, chunk_index=0, text="Result 1",
                         chunk_metadata=json.dumps({"page": 1}), created_at="2023-01-01",
                         similarity_score=0.85),
                MagicMock(id=2, document_id=1, chunk_index=1, text="Result 2",
                         chunk_metadata=json.dumps({"page": 2}), created_at="2023-01-01",
                         similarity_score=0.75),
            ]
    
            with patch.object(db, 'execute') as mock_execute:
                # Setup the mock for execute to return our mock results
                mock_execute.return_value = mock_result
    
                # Call the search function
                results = await DocumentService.search_documents(
                    db=db, user_id=user_id, query=query, limit=limit
                )
    
                # Verify embedding generation was called
                mock_generate.assert_called_once_with(query)
    
                # Verify execute was called (not checking exact SQL as it's complex)
                mock_execute.assert_called()
    
                # Verify results format
>               assert len(results) == len(mock_result)
E               AssertionError: assert 0 == 2
E                +  where 0 = len([])
E                +  and   2 = len([<MagicMock id='5847509920'>, <MagicMock id='5847507232'>])

tests/test_services/test_pgvector_search.py:73: AssertionError
----------------------------- Captured stderr call -----------------------------
INFO:app.services.document:Generated embedding vector of length 384
ERROR:app.services.document:Vector search failed: object list can't be used in 'await' expression
INFO:app.services.document:Falling back to keyword search
ERROR:app.services.document:Document search error: object NoneType can't be used in 'await' expression
------------------------------ Captured log call -------------------------------
INFO     app.services.document:document.py:899 Generated embedding vector of length 384
ERROR    app.services.document:document.py:973 Vector search failed: object list can't be used in 'await' expression
INFO     app.services.document:document.py:974 Falling back to keyword search
ERROR    app.services.document:document.py:1045 Document search error: object NoneType can't be used in 'await' expression
_______________________ test_fallback_to_keyword_search ________________________

db = <sqlalchemy.orm.session.Session object at 0x15c4df5c0>
mock_embedding = [0.8958017928614395, 0.33683896207022723, 0.07299349204759353, 0.15613425432413175, 0.9117650734431332, 0.3712919913742897, ...]

    @pytest.mark.asyncio
    async def test_fallback_to_keyword_search(db, mock_embedding):
        """Test fallback to keyword search when vector search fails."""
        user_id = 1
        query = "test query"
        limit = 5
    
        # Mock _generate_embeddings to return a fixed embedding vector
        with patch.object(
            DocumentService, '_generate_embeddings', return_value=mock_embedding
        ) as mock_generate:
    
            # Mock execute to fail first on vector search then succeed for keyword search
            with patch.object(db, 'execute') as mock_execute:
                # First call (vector search) raises an exception
                mock_execute.side_effect = [
                    Exception("Vector search failed"),
                    # Second call (keyword search) returns results
                    [
                        MagicMock(id=1, document_id=1, chunk_index=0, text="Keyword Result 1",
                                 chunk_metadata=json.dumps({"page": 1}), created_at="2023-01-01"),
                        MagicMock(id=2, document_id=1, chunk_index=1, text="Keyword Result 2",
                                 chunk_metadata=json.dumps({"page": 2}), created_at="2023-01-01")
                    ]
                ]
    
                # Mock rollback to avoid errors from mock
                db.rollback = MagicMock()
    
                # Call the search function
                results = await DocumentService.search_documents(
                    db=db, user_id=user_id, query=query, limit=limit
                )
    
                # Verify embedding generation was called
                mock_generate.assert_called_once_with(query)
    
                # Verify db rollback was called after vector search failure
                db.rollback.assert_called_once()
    
                # Verify execute was called at least twice (once for vector, once for keyword)
>               assert mock_execute.call_count >= 2
E               AssertionError: assert 1 >= 2
E                +  where 1 = <MagicMock name='execute' id='5847509584'>.call_count

tests/test_services/test_pgvector_search.py:117: AssertionError
----------------------------- Captured stderr call -----------------------------
INFO:app.services.document:Generated embedding vector of length 384
ERROR:app.services.document:Vector search failed: Vector search failed
INFO:app.services.document:Falling back to keyword search
ERROR:app.services.document:Document search error: object MagicMock can't be used in 'await' expression
------------------------------ Captured log call -------------------------------
INFO     app.services.document:document.py:899 Generated embedding vector of length 384
ERROR    app.services.document:document.py:973 Vector search failed: Vector search failed
INFO     app.services.document:document.py:974 Falling back to keyword search
ERROR    app.services.document:document.py:1045 Document search error: object MagicMock can't be used in 'await' expression
______________________ test_vector_search_pgvector_syntax ______________________

    @pytest.mark.asyncio
    async def test_vector_search_pgvector_syntax():
        """Test the SQL syntax used for pgvector search is correct."""
        # This test doesn't execute the query but verifies the SQL syntax used with pgvector
        with patch('sqlalchemy.text') as mock_text:
            # Mock text to track SQL statements
            mock_text.side_effect = lambda x: x
    
            # Track all SQL statements passed to text()
            sql_statements = []
            def capture_sql(sql):
                sql_statements.append(sql)
                return sql
    
            mock_text.side_effect = capture_sql
    
            with patch.object(DocumentService, '_generate_embeddings', return_value=[0.1, 0.2, 0.3]):
                with patch.object(MagicMock(), 'execute'):
                    # Call method to generate SQL
                    try:
                        await DocumentService.search_documents(
                            db=MagicMock(), user_id=1, query="test", limit=5
                        )
                    except:
                        pass
    
                    # Check that we have SQL statements containing our expected patterns
                    pgvector_function_sql = next((s for s in sql_statements if "pgvector_parse_array" in s and "CREATE OR REPLACE" in s), None)
                    vector_search_sql = next((s for s in sql_statements if "cosine_distance" in s or "<=> " in s or "pgvector_parse_array" in s and "SELECT" in s), None)
    
                    # Verify we have both SQL statements
                    assert pgvector_function_sql is not None, "SQL with pgvector_parse_array function creation not found"
>                   assert vector_search_sql is not None, "Vector search SQL not found"
E                   AssertionError: Vector search SQL not found
E                   assert None is not None

tests/test_services/test_pgvector_search.py:155: AssertionError
----------------------------- Captured stderr call -----------------------------
INFO:app.services.document:Generated embedding vector of length 3
ERROR:app.services.document:Vector search failed: object MagicMock can't be used in 'await' expression
INFO:app.services.document:Falling back to keyword search
ERROR:app.services.document:Document search error: object MagicMock can't be used in 'await' expression
------------------------------ Captured log call -------------------------------
INFO     app.services.document:document.py:899 Generated embedding vector of length 3
ERROR    app.services.document:document.py:973 Vector search failed: object MagicMock can't be used in 'await' expression
INFO     app.services.document:document.py:974 Falling back to keyword search
ERROR    app.services.document:document.py:1045 Document search error: object MagicMock can't be used in 'await' expression
_________________________ test_create_vector_function __________________________

db = <sqlalchemy.orm.session.Session object at 0x15c4935c0>

    @pytest.mark.asyncio
    async def test_create_vector_function(db):
        """Test that the pgvector_parse_array function is created in PostgreSQL."""
        # Mock the execute function to simulate function creation
        with patch.object(db, 'execute') as mock_execute:
            with patch.object(db, 'commit') as mock_commit:
                # Call a function that would create the custom function
                await DocumentService.search_documents(db=db, user_id=1, query="test", limit=5)
    
                # Check that the execute function was called
                mock_execute.assert_called()
    
                # Check that commit was called after function creation
>               mock_commit.assert_called()

tests/test_services/test_pgvector_search.py:171: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MagicMock name='commit' id='5841715616'>

    def assert_called(self):
        """assert that the mock was called at least once
        """
        if self.call_count == 0:
            msg = ("Expected '%s' to have been called." %
                   (self._mock_name or 'mock'))
>           raise AssertionError(msg)
E           AssertionError: Expected 'commit' to have been called.

../../.pyenv/versions/3.13.1/lib/python3.13/unittest/mock.py:946: AssertionError
----------------------------- Captured stderr call -----------------------------
Batches:   0%|          | 0/1 [00:00<?, ?it/s]Batches: 100%|██████████| 1/1 [00:00<00:00, 23.49it/s]
INFO:app.services.document:Generated embedding vector of length 384
ERROR:app.services.document:Vector search failed: object MagicMock can't be used in 'await' expression
INFO:app.services.document:Falling back to keyword search
ERROR:app.services.document:Document search error: object NoneType can't be used in 'await' expression
------------------------------ Captured log call -------------------------------
INFO     app.services.document:document.py:899 Generated embedding vector of length 384
ERROR    app.services.document:document.py:973 Vector search failed: object MagicMock can't be used in 'await' expression
INFO     app.services.document:document.py:974 Falling back to keyword search
ERROR    app.services.document:document.py:1045 Document search error: object NoneType can't be used in 'await' expression
___________________ test_retrieve_context_with_document_ids ____________________

mock_db = <MagicMock id='5847504880'>
mock_document = <Document(id=1, filename=test_document.pdf)>
mock_document_chunks = [<DocumentChunk(id=1, document_id=1, chunk_index=0)>, <DocumentChunk(id=2, document_id=1, chunk_index=1)>]

    @pytest.mark.asyncio
    async def test_retrieve_context_with_document_ids(mock_db, mock_document, mock_document_chunks):
        """Test retrieving context when document IDs are provided."""
        # Arrange
        rag_service = RAGService()
        mock_embedding = [0.1] * 384
    
        # Mock document service embedding generation
        with patch.object(
            DocumentService, '_generate_embeddings',
            return_value=mock_embedding
        ) as mock_generate:
            # Setup the mock db.execute response for the first query (pgvector function setup)
            mock_db.execute = MagicMock()
            mock_execute = mock_db.execute
    
            # Setup the mock db.execute response for the second query (vector search)
            mock_result = MagicMock()
            mock_result.__iter__.return_value = [
                MagicMock(
                    id=1,
                    document_id=1,
                    chunk_index=0,
                    text="This is the first chunk",
                    chunk_metadata={"page": 1},
                    filename="test_document.pdf",
                    similarity_score=0.85
                )
            ]
            mock_execute.return_value = mock_result
    
            # Act
            result = await rag_service.retrieve_context(
                db=mock_db,
                user_id=1,
                query="test query",
                document_ids=[1],
                top_k=1
            )
    
            # Assert
>           assert len(result) == 1
E           assert 0 == 1
E            +  where 0 = len([])

tests/test_services/test_rag_service.py:94: AssertionError
----------------------------- Captured stderr call -----------------------------
INFO:app.services.rag:RAG Service initialized with model: llama3.2, URL: http://localhost:11434
INFO:app.services.rag:Using LangChain integration for Ollama API (preferred)
INFO:app.services.rag:Retrieving context for query: 'test query' for user 1
ERROR:app.services.rag:Error retrieving context: object MagicMock can't be used in 'await' expression
------------------------------ Captured log call -------------------------------
INFO     app.services.rag:rag.py:75 RAG Service initialized with model: llama3.2, URL: http://localhost:11434
INFO     app.services.rag:rag.py:77 Using LangChain integration for Ollama API (preferred)
INFO     app.services.rag:rag.py:206 Retrieving context for query: 'test query' for user 1
ERROR    app.services.rag:rag.py:300 Error retrieving context: object MagicMock can't be used in 'await' expression
=============================== warnings summary ===============================
venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:295
venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:295
  /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:295: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.10/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
  /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68: DeprecationWarning: Failing to pass a value to the 'type_params' parameter of 'typing.ForwardRef._evaluate' is deprecated, as it leads to incorrect behaviour when calling typing.ForwardRef._evaluate on a stringified annotation that references a PEP 695 type parameter. It will be disallowed in Python 3.15.
    return cast(Any, type_)._evaluate(globalns, localns, recursive_guard=set())

tests/test_performance.py:123
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_performance.py:123: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

tests/test_performance.py:220
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_performance.py:220: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

tests/test_services/test_document_service.py::test_get_document_by_id
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_services/test_document_service.py:170: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited
    result = await DocumentService.get_document_by_id(mock_db, document_id=1)
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/test_services/test_document_service.py::test_get_documents_by_user_id
  /Users/deepaksingh/.pyenv/versions/3.13.1/lib/python3.13/unittest/mock.py:2191: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited
    setattr(_type, entry, MagicProxy(entry, self))
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/test_services/test_rag_service.py::test_get_available_documents
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_services/test_rag_service.py:302: DeprecationWarning: RAGService.get_available_documents is deprecated. Use DocumentService.get_documents_by_user_id instead.
    result = await rag_service.get_available_documents(

tests/test_services/test_rag_service_advanced.py::test_get_available_documents
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_services/test_rag_service_advanced.py:443: DeprecationWarning: RAGService.get_available_documents is deprecated. Use DocumentService.get_documents_by_user_id instead.
    result = await rag_service.get_available_documents(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html

---------- coverage: platform darwin, python 3.13.1-final-0 ----------
Name                            Stmts   Miss  Cover
---------------------------------------------------
app/__init__.py                     1      0   100%
app/api/__init__.py                 0      0   100%
app/api/deps.py                    88     32    64%
app/api/routes/__init__.py          7      0   100%
app/api/routes/auth.py             32     13    59%
app/api/routes/documents.py        74     50    32%
app/api/routes/qa.py               36     23    36%
app/api/routes/users.py            54     29    46%
app/core/__init__.py                0      0   100%
app/core/config.py                 29      2    93%
app/core/security.py               17      1    94%
app/db/__init__.py                  0      0   100%
app/db/base_class.py                2      0   100%
app/db/init_db.py                  16      4    75%
app/db/model_registry.py            4      0   100%
app/db/session.py                  22      3    86%
app/main.py                        43      9    79%
app/models/__init__.py              0      0   100%
app/models/document.py             36      0   100%
app/models/user.py                 16      0   100%
app/schemas/__init__.py             0      0   100%
app/schemas/document.py            62      9    85%
app/schemas/user.py                34      0   100%
app/services/__init__.py            0      0   100%
app/services/document.py          413    236    43%
app/services/rag.py               257     43    83%
app/services/user.py              102     28    73%
app/utils/__init__.py               0      0   100%
app/utils/model_conversion.py     128    116     9%
---------------------------------------------------
TOTAL                            1473    598    59%

=========================== short test summary info ============================
FAILED tests/test_api/test_auth.py::test_login_success - AttributeError: 'cor...
FAILED tests/test_api/test_auth.py::test_login_fail_incorrect_password - Attr...
FAILED tests/test_api/test_auth.py::test_login_fail_nonexistent_user - Attrib...
FAILED tests/test_api/test_auth.py::test_register_success - AttributeError: '...
FAILED tests/test_api/test_auth.py::test_register_fail_duplicate_email - Attr...
FAILED tests/test_api/test_auth.py::test_register_fail_duplicate_username - A...
FAILED tests/test_api/test_auth_security.py::test_login_rate_limiting - Runti...
FAILED tests/test_api/test_auth_security.py::test_password_complexity - sqlal...
FAILED tests/test_performance/test_concurrency.py::test_multiple_user_sessions
FAILED tests/test_performance.py::test_login_performance - AttributeError: 'c...
FAILED tests/test_performance.py::test_register_performance - AttributeError:...
FAILED tests/test_services/test_document_service.py::test_upload_document - T...
FAILED tests/test_services/test_document_service.py::test_get_document_by_id
FAILED tests/test_services/test_document_service.py::test_get_documents_by_user_id
FAILED tests/test_services/test_pgvector_search.py::test_vector_search_with_pgvector
FAILED tests/test_services/test_pgvector_search.py::test_fallback_to_keyword_search
FAILED tests/test_services/test_pgvector_search.py::test_vector_search_pgvector_syntax
FAILED tests/test_services/test_pgvector_search.py::test_create_vector_function
FAILED tests/test_services/test_rag_service.py::test_retrieve_context_with_document_ids
ERROR tests/test_api/test_auth_security.py::test_token_expiration - sqlalchem...
ERROR tests/test_api/test_auth_security.py::test_csrf_protection - sqlalchemy...
ERROR tests/test_api/test_documents.py::test_upload_document - AttributeError...
ERROR tests/test_api/test_documents.py::test_list_documents - AttributeError:...
ERROR tests/test_api/test_documents.py::test_search_documents - AttributeErro...
ERROR tests/test_api/test_documents.py::test_get_document - AttributeError: '...
ERROR tests/test_api/test_documents.py::test_delete_document - AttributeError...
ERROR tests/test_api/test_documents.py::test_delete_document_not_found - Attr...
ERROR tests/test_api/test_documents.py::test_upload_document_invalid_file_type
ERROR tests/test_api/test_documents.py::test_upload_document_server_error - A...
ERROR tests/test_api/test_documents.py::test_list_documents_with_pagination
ERROR tests/test_api/test_documents.py::test_list_documents_server_error - At...
ERROR tests/test_api/test_documents.py::test_search_documents_server_error - ...
ERROR tests/test_api/test_documents.py::test_get_document_unauthorized_access
ERROR tests/test_api/test_documents.py::test_get_document_server_error - Attr...
ERROR tests/test_api/test_documents.py::test_list_documents_with_invalid_pagination
ERROR tests/test_api/test_documents.py::test_search_documents_with_empty_query
ERROR tests/test_api/test_documents.py::test_upload_document_rate_limited - A...
ERROR tests/test_api/test_documents.py::test_empty_file_upload - AttributeErr...
ERROR tests/test_api/test_documents.py::test_upload_document_with_metadata - ...
ERROR tests/test_api/test_documents.py::test_search_documents_with_specific_user_context
ERROR tests/test_api/test_qa_api.py::test_get_available_documents - Attribute...
ERROR tests/test_api/test_qa_api.py::test_ask_question_success - AttributeErr...
ERROR tests/test_api/test_qa_api.py::test_ask_question_invalid_query - Attrib...
ERROR tests/test_api/test_qa_api.py::test_ask_question_error_handling - Attri...
ERROR tests/test_api/test_qa_api.py::test_ask_question_with_invalid_document_ids
ERROR tests/test_api/test_qa_api.py::test_ask_question_with_rate_limit_reached
ERROR tests/test_api/test_qa_api.py::test_get_documents_api_parameters - Attr...
ERROR tests/test_api/test_qa_api.py::test_ask_question_with_question_parameter
ERROR tests/test_api/test_qa_api.py::test_ask_question_with_unprocessed_document
ERROR tests/test_api/test_qa_api.py::test_ask_question_ollama_service_unavailable
ERROR tests/test_api/test_qa_api.py::test_ask_question_with_empty_document_list
ERROR tests/test_api/test_qa_api.py::test_ask_question_rate_limit - Attribute...
ERROR tests/test_api/test_qa_api.py::test_ask_question_with_invalid_parameters
ERROR tests/test_api/test_qa_api.py::test_ask_question_with_special_characters
ERROR tests/test_api/test_qa_api.py::test_ask_question_without_cache - Attrib...
ERROR tests/test_api/test_qa_api.py::test_ask_question_with_very_long_query
ERROR tests/test_api/test_users.py::test_read_users_superuser - AttributeErro...
ERROR tests/test_api/test_users.py::test_read_users_normal_user - AttributeEr...
ERROR tests/test_api/test_users.py::test_read_user_me - AttributeError: 'coro...
ERROR tests/test_api/test_users.py::test_update_user_me - AttributeError: 'co...
ERROR tests/test_api/test_users.py::test_update_user_me_password - AttributeE...
ERROR tests/test_api/test_users.py::test_read_user_by_id - AttributeError: 'c...
ERROR tests/test_api/test_users.py::test_read_user_by_id_not_found - Attribut...
ERROR tests/test_api/test_users.py::test_create_user_superuser - AttributeErr...
ERROR tests/test_api/test_users.py::test_create_user_normal_user - AttributeE...
ERROR tests/test_api/test_users.py::test_update_user_superuser - AttributeErr...
ERROR tests/test_api/test_users.py::test_update_user_normal_user - AttributeE...
ERROR tests/test_api/test_users.py::test_delete_user_superuser - AttributeErr...
ERROR tests/test_api/test_users.py::test_delete_user_normal_user - AttributeE...
ERROR tests/test_api/test_users.py::test_create_user_validation[invalid_data0-email]
ERROR tests/test_api/test_users.py::test_create_user_validation[invalid_data1-password]
ERROR tests/test_api/test_users.py::test_create_user_validation[invalid_data2-password]
ERROR tests/test_api/test_users.py::test_create_user_validation[invalid_data3-email]
ERROR tests/test_api/test_users.py::test_create_user_validation[invalid_data4-email]
ERROR tests/test_performance/test_concurrency.py::test_concurrent_read_requests
ERROR tests/test_performance.py::test_get_user_me_performance - AttributeErro...
ERROR tests/test_performance.py::test_get_users_performance - AttributeError:...
====== 19 failed, 104 passed, 1 skipped, 15 warnings, 58 errors in 52.73s ======
============================= test session starts ==============================
platform darwin -- Python 3.13.1, pytest-8.3.4, pluggy-1.5.0
rootdir: /Users/deepaksingh/Desktop/JKT_EX
configfile: pytest.ini
testpaths: tests
plugins: cov-6.0.0, langsmith-0.3.11, asyncio-0.25.3, anyio-4.8.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=function
collected 183 items

tests/test_api/test_auth.py ......s.                                     [  4%]
tests/test_api/test_auth_security.py ....                                [  6%]
tests/test_api/test_deps.py ................                             [ 15%]
tests/test_api/test_documents.py ...s............s..                     [ 25%]
tests/test_api/test_qa_api.py .................                          [ 34%]
tests/test_api/test_users.py ....................                        [ 45%]
tests/test_db/test_model_registry.py ...                                 [ 47%]
tests/test_integration/test_rag_workflow.py ..                           [ 48%]
tests/test_integration/test_rag_workflow_comprehensive.py .....          [ 51%]
tests/test_performance/test_concurrency.py ..s                           [ 53%]
tests/test_performance.py .......                                        [ 56%]
tests/test_services/test_batch_embeddings.py ...                         [ 58%]
tests/test_services/test_document_deletion.py .....                      [ 61%]
tests/test_services/test_document_processing.py .......                  [ 65%]
tests/test_services/test_document_processing_edge_cases.py ...........   [ 71%]
tests/test_services/test_document_service.py ...s....                    [ 75%]
tests/test_services/test_pgvector_search.py .....                        [ 78%]
tests/test_services/test_rag_service.py ............                     [ 84%]
tests/test_services/test_rag_service_advanced.py .................       [ 93%]
tests/test_services/test_user_service.py ...........                     [100%]

=============================== warnings summary ===============================
venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:295
venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:295
  /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:295: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.10/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
  /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68: DeprecationWarning: Failing to pass a value to the 'type_params' parameter of 'typing.ForwardRef._evaluate' is deprecated, as it leads to incorrect behaviour when calling typing.ForwardRef._evaluate on a stringified annotation that references a PEP 695 type parameter. It will be disallowed in Python 3.15.
    return cast(Any, type_)._evaluate(globalns, localns, recursive_guard=set())

tests/test_performance.py:247
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_performance.py:247: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

tests/test_performance.py:344
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_performance.py:344: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

tests/test_api/test_auth_security.py: 6 warnings
tests/test_performance/test_concurrency.py: 10 warnings
tests/test_performance.py: 15 warnings
  /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/starlette/testclient.py:431: DeprecationWarning: You should not use the 'timeout' argument with the TestClient. See https://github.com/encode/starlette/issues/1108 for more information.
    warnings.warn(

tests/test_api/test_auth_security.py::test_token_expiration
  /Users/deepaksingh/.pyenv/versions/3.13.1/lib/python3.13/unittest/mock.py:428: RuntimeWarning: coroutine 'AsyncSession.close' was never awaited
    def __init__(self, /, *args, **kwargs):
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/test_services/test_rag_service.py::test_get_available_documents
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_services/test_rag_service.py:302: DeprecationWarning: RAGService.get_available_documents is deprecated. Use DocumentService.get_documents_by_user_id instead.
    result = await rag_service.get_available_documents(

tests/test_services/test_rag_service_advanced.py::test_generate_answer_ollama_empty_response
  /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/httpx/_models.py:195: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited
    @property
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/test_services/test_rag_service_advanced.py::test_get_available_documents
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_services/test_rag_service_advanced.py:443: DeprecationWarning: RAGService.get_available_documents is deprecated. Use DocumentService.get_documents_by_user_id instead.
    result = await rag_service.get_available_documents(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html

---------- coverage: platform darwin, python 3.13.1-final-0 ----------
Name                            Stmts   Miss  Cover
---------------------------------------------------
app/__init__.py                     1      0   100%
app/api/__init__.py                 0      0   100%
app/api/deps.py                   115     35    70%
app/api/routes/__init__.py          7      0   100%
app/api/routes/auth.py             32      1    97%
app/api/routes/documents.py        74      5    93%
app/api/routes/qa.py               36      2    94%
app/api/routes/users.py            54     10    81%
app/core/__init__.py                0      0   100%
app/core/config.py                 29      2    93%
app/core/security.py               17      0   100%
app/db/__init__.py                  0      0   100%
app/db/base_class.py                2      0   100%
app/db/init_db.py                  16      4    75%
app/db/model_registry.py            4      0   100%
app/db/session.py                  22      3    86%
app/main.py                        43      9    79%
app/models/__init__.py              0      0   100%
app/models/document.py             36      2    94%
app/models/user.py                 16      0   100%
app/schemas/__init__.py             0      0   100%
app/schemas/document.py            62      9    85%
app/schemas/user.py                34      0   100%
app/services/__init__.py            0      0   100%
app/services/document.py          413    194    53%
app/services/rag.py               257     37    86%
app/services/user.py              102     20    80%
app/utils/__init__.py               0      0   100%
app/utils/model_conversion.py     128     83    35%
---------------------------------------------------
TOTAL                            1500    416    72%

================= 178 passed, 5 skipped, 46 warnings in 37.43s =================
============================= test session starts ==============================
platform darwin -- Python 3.13.1, pytest-8.3.4, pluggy-1.5.0
rootdir: /Users/deepaksingh/Desktop/JKT_EX
configfile: pytest.ini
testpaths: tests
plugins: cov-6.0.0, langsmith-0.3.11, asyncio-0.25.3, anyio-4.8.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=function
collected 183 items

tests/test_api/test_auth.py 

=============================== warnings summary ===============================
venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:295
venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:295
  /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/pydantic/_internal/_config.py:295: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.10/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68
  /Users/deepaksingh/Desktop/JKT_EX/venv/lib/python3.13/site-packages/pydantic/v1/typing.py:68: DeprecationWarning: Failing to pass a value to the 'type_params' parameter of 'typing.ForwardRef._evaluate' is deprecated, as it leads to incorrect behaviour when calling typing.ForwardRef._evaluate on a stringified annotation that references a PEP 695 type parameter. It will be disallowed in Python 3.15.
    return cast(Any, type_)._evaluate(globalns, localns, recursive_guard=set())

tests/test_performance.py:247
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_performance.py:247: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

tests/test_performance.py:344
  /Users/deepaksingh/Desktop/JKT_EX/tests/test_performance.py:344: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html

---------- coverage: platform darwin, python 3.13.1-final-0 ----------
Name                            Stmts   Miss  Cover
---------------------------------------------------
app/__init__.py                     1      0   100%
app/api/__init__.py                 0      0   100%
app/api/deps.py                   108     80    26%
app/api/routes/__init__.py          7      0   100%
app/api/routes/auth.py             32     15    53%
app/api/routes/documents.py        72     49    32%
app/api/routes/qa.py               36     23    36%
app/api/routes/users.py            62     36    42%
app/core/__init__.py                0      0   100%
app/core/config.py                 29      2    93%
app/core/security.py               17      7    59%
app/db/__init__.py                  0      0   100%
app/db/base_class.py                2      0   100%
app/db/init_db.py                  16      4    75%
app/db/model_registry.py            4      0   100%
app/db/session.py                  22     11    50%
app/main.py                        43      9    79%
app/models/__init__.py              0      0   100%
app/models/document.py             36      2    94%
app/models/user.py                 16      0   100%
app/schemas/__init__.py             0      0   100%
app/schemas/document.py            62      9    85%
app/schemas/user.py                34      0   100%
app/services/__init__.py            0      0   100%
app/services/document.py          413    356    14%
app/services/rag.py               257    215    16%
app/services/user.py              102     61    40%
app/utils/__init__.py               0      0   100%
app/utils/model_conversion.py     128    116     9%
---------------------------------------------------
TOTAL                            1499    995    34%

============================= 11 warnings in 0.54s =============================
